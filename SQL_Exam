--1

SELECT
	column_name,
	data_type
FROM
	information_schema.columns
WHERE
	table_name='naep';

--2

SELECT
	*
FROM
	naep
LIMIT
	50;

--3

SELECT
	state,
	COUNT(avg_math_4_score),
	MIN(avg_math_4_score),
	AVG(avg_math_4_score),
	MAX(avg_math_4_score)
FROM
	naep
GROUP BY
	state
ORDER BY
	state;

--4

SELECT
	state,
	COUNT(avg_math_4_score),
	MIN(avg_math_4_score),
	AVG(avg_math_4_score),
	MAX(avg_math_4_score)
FROM
	naep
GROUP BY
	state
HAVING
	MAX(avg_math_4_score) - MIN(avg_math_4_score) > 30
ORDER BY
	state;

--5

SELECT
 	state AS bottom_10_states
FROM
	naep n
WHERE
 	n.year = 2000
ORDER BY
 	n.avg_math_4_score
LIMIT 10;

--6

SELECT
	ROUND(AVG(n.avg_math_4_score), 2) AS overall_2000_avg
FROM
	naep n
WHERE
	n.year = 2000;

--7

SELECT
	state as below_average_states_y2000
FROM
	naep
WHERE
	(avg_math_4_score IS NOT NULL)
	AND
	(year = 2000)
GROUP BY
	state
HAVING
	AVG(naep.avg_math_4_score) <
	(SELECT
		ROUND(AVG(avg_math_4_score),2)
	FROM
		naep
	WHERE
		(naep.avg_math_4_score IS NOT NULL)
	  AND
	  (naep.year = 2000));

--8

SELECT
	state as scores_missing_y2000
FROM
	naep n
WHERE
	n.year = 2000
GROUP BY
	n.state
HAVING
	COUNT(*) - COUNT(n.avg_math_4_score) > 0;

--9

SELECT
	n.state,
	ROUND(n.avg_math_4_score, 2) as avg_math_4_score,
	f.total_expenditure
FROM
	naep n
LEFT OUTER JOIN
	finance f
ON
	n.id = f.id
WHERE
	(n.year = '2000')
	AND
	(avg_math_4_score IS NOT NULL)
ORDER BY
	f.total_expenditure DESC;
